version: '3.7'

services:
  e2e:
    image: $REGISTRY_URL/e2e
  ######### Hosted External services
  homechain:
    image: $REGISTRY_URL/test-homechain:pre-latest

  sidechain:
    image: $REGISTRY_URL/test-sidechain:pre-latest

  postgres:
    image: $REGISTRY_URL/test-postgres:pre-latest

  consul:
    image: $REGISTRY_URL/test-consul:pre-latest
    ports:
      - "8500:8500"

  ipfs:
    image: ipfs/go-ipfs
    environment:
      - IPFS_BIND_IP=0.0.0.0
    ports:
      - "4001:4001"

  ######### Managed External services

  aipostgres:
    image: postgres:11.2
    environment:
      - POSTGRES_PASSWORD=password

  redis:
    image: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'

  redis_ai:
    image: "redis"

  minio:
    image: minio/minio:latest
    entrypoint: sh
    command: -c 'mkdir -p /export/testing && /usr/bin/minio server /export'
    environment:
      MINIO_ACCESS_KEY: "AKIAIOSFODNN7EXAMPLE"
      MINIO_SECRET_KEY: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
    ports:
      - "9000:9000"

  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:6.7.0"
    environment:
      - "discovery.type=single-node"
    ports:
      - "9200"

  ######### polyswarmd
  polyswarmd:
    image: $REGISTRY_URL/polyswarmd
    environment:
      - PYTHONUNBUFFERED=1
      - CONSUL=http://consul:8500
      - POLY_COMMUNITY_NAME=gamma
    ports:
      - "31337:31337"

  ######### relays

  relay0:
    image: $REGISTRY_URL/relay
    environment:
      - RELAY_KEYDIR=/keyfiles
      - RELAY_ACCOUNT=0xd87e4662653042c5da11711542c11f2c8433612d
      - RELAY_PASSWORD=password
      - RELAY_COMMUNITY=gamma
      - RELAY_CONSUL=http://consul:8500
      - RUST_LOG=polyswarm_relay=trace
    command:
      - "polyswarm-relay"
      - "--config"
      - "config.toml"

  relay1:
    image: $REGISTRY_URL/relay
    environment:
      - RELAY_KEYDIR=/keyfiles
      - RELAY_ACCOUNT=0x4f10166cafd7856ea946124927d4478fdd18d979
      - RELAY_PASSWORD=password
      - RELAY_COMMUNITY=gamma
      - RELAY_CONSUL=http://consul:8500
      - RUST_LOG=polyswarm_relay=trace
    command:
      - "polyswarm-relay"
      - "--config"
      - "config.toml"

  relay2:
    image: $REGISTRY_URL/relay
    environment:
      - RELAY_KEYDIR=/keyfiles
      - RELAY_ACCOUNT=0x085ba02c35555fecb8147820135fdfec10eed85a
      - RELAY_PASSWORD=password
      - RELAY_COMMUNITY=gamma
      - RELAY_CONSUL=http://consul:8500
      - RUST_LOG=polyswarm_relay=trace
    command:
      - "polyswarm-relay"
      - "--config"
      - "config.toml"

  ######### microengine

  maintain:
    image: $REGISTRY_URL/polyswarm-client
    environment:
      - PYTHONUNBUFFERED=1
      - KEYFILE=docker/balance_keyfile
      - PASSWORD=password
    command:
      - "balancemanager"
      - "--log"
      - "info"
      - "maintain"
      - "--polyswarmd-addr"
      - "polyswarmd:31337"
      - "--insecure-transport"
      - "--testing"
      - "10"
      - "--maximum"
      - "105"
      - "--withdraw-target"
      - "101"
      - "100"
      - "12"


  ######### microengine

  microengine-eicar:
    image: $REGISTRY_URL/polyswarm-client
    environment:
      - PYTHONUNBUFFERED=1
      - KEYFILE=docker/microengine_keyfile
      - PASSWORD=password
    command:
      - "microengine"
      - "--log"
      - "info"
      - "--polyswarmd-addr"
      - "polyswarmd:31337"
      - "--insecure-transport"
      - "--testing"
      - "10"
      - "--backend"
      - "eicar"
      - "--chains"
      - "side"

  ######### Arbiter

  arbiter-verbatim:
    image: $REGISTRY_URL/polyswarm-client
    environment:
      - PYTHONUNBUFFERED=1
      - KEYFILE=docker/arbiter_keyfile
      - PASSWORD=password
    command:
      - "arbiter"
      - "--log"
      - "info"
      - "--polyswarmd-addr"
      - "polyswarmd:31337"
      - "--insecure-transport"
      - "--testing"
      - "10"
      - "--backend"
      - "verbatim"
      - "--chains"
      - "side"

  ######### Consumer

  consumer-frontend:
    image: $REGISTRY_URL/consumer
    ports:
      - "12322:12322"
    environment:
      - PYTHONUNBUFFERED=1
      - REDIS_ADDR=redis:6379
      - ES_URI=elasticsearch:9200
      - S3_ENDPOINT=http://minio:9000/
      - AUTH_URI=http://apikeymgmt:5000
      - S3_BUCKET=testing
      - S3_ACCESS_KEY=AKIAIOSFODNN7EXAMPLE
      - S3_SECRET_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      - POLY_WORK=testing
      - DEFAULT_COMMUNITY=gamma
      - ARTIFACT_INDEX_URI=http://artifact_index:9696
    command:
      - "consumer"
      - "frontend"
      - "--insecure-transport"

  consumer-backend:
    image: $REGISTRY_URL/consumer
    environment:
      - PYTHONUNBUFFERED=1
      - KEYFILE=docker/consumer_keyfile
      - PASSWORD=password
      - CHAIN=side
      - REDIS_ADDR=redis:6379
    command:
      - "consumer"
      - "backend"
      - "--polyswarmd-addr"
      - "polyswarmd:31337"
      - "--insecure-transport"
      - "--community"
      - "gamma"

  ######### Api Key Management

  apikeymgmt:
    image: $REGISTRY_URL/api-key-management
    environment:
      - DB_URI=postgresql://postgres:password@postgres:5432
      - POSTGRES_HOST=postgres
    ports:
      - 5000:5000
    command:
      - "./docker/run.sh"
      - "-mt"


  ######### Artifact Index

  historical_worker:
    image: $REGISTRY_URL/artifact-index
    environment:
      - AI_REDIS_URI=redis://redis_ai
      - AI_URI=http://artifact_index:9696
      - AI_WORKER_KEY=TOOMANYWORKERS
      - AI_POOL_SIZE=4
      - AI_STATS_FREQUENCY=15
      - AI_HISTORICAL_SCAN_FREQUENCY=10
      - AI_WORKER_QUEUE=ai_historical
    command: bash docker/run-celery.sh

  live_worker:
    image: $REGISTRY_URL/artifact-index
    environment:
      - AI_REDIS_URI=redis://redis_ai
      - AI_URI=http://artifact_index:9696
      - AI_WORKER_KEY=TOOMANYWORKERS
      - AI_POOL_SIZE=4
      - AI_STATS_FREQUENCY=15
      - AI_HISTORICAL_SCAN_FREQUENCY=10
      - AI_WORKER_QUEUE=ai_live
    command: bash docker/run-celery.sh


  artifact_index:
    image: $REGISTRY_URL/artifact-index
    ports:
      - "9696:9696"
    environment:
      - PYTHONUNBUFFERED=1
      - DB_URI=postgresql://postgres:password@aipostgres:5432/postgres
      - POLY_WORK=testing
      - DEFAULT_COMMUNITY=gamma
      - AI_S3_ENDPOINT=http://minio:9000/
      - AI_S3_BUCKET=testing
      - AI_S3_MALWARE_BUCKET=testing
      - AI_S3_ACCESS_KEY=AKIAIOSFODNN7EXAMPLE
      - AI_S3_SECRET_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      - AI_SECRET_KEY=TOOMANYSECRETS
      - AI_WORKER_KEY=TOOMANYWORKERS
      - AI_STATS_FREQUENCY=15
      - AI_REDIS_URI=redis://redis_ai
      - FLASK_WORKERS=4
      - AI_HISTORICAL_SCAN_FREQUENCY=10
    command:
      - "./docker/run.sh"
      - "-m"

  local_worker:
    image: $REGISTRY_URL/artifact-index
    environment:
      - DEFAULT_COMMUNITY=gamma
      - DB_URI=postgresql://postgres:password@aipostgres:5432/postgres
      - AI_REDIS_URI=redis://redis_ai
      - AI_URI=http://artifact_index:9696
      - AI_POOL_SIZE=1
      - AI_STATS_FREQUENCY=15
      - AI_S3_MALWARE_BUCKET=testing
      - AI_S3_ACCESS_KEY=AKIAIOSFODNN7EXAMPLE
      - AI_S3_SECRET_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      - AI_S3_ENDPOINT=http://minio:9000/
      - AI_WORKER_KEY=TOOMANYWORKERS
      - AI_HISTORICAL_SCAN_FREQUENCY=10
    command: bash -c "celery worker -A artifact_index.tasks.celery --broker=$${AI_REDIS_URI} --result-backend=$${AI_REDIS_URI} --loglevel=info -Q ai_local"

  beat:
    image: $REGISTRY_URL/artifact-index
    environment:
      - AI_REDIS_URI=redis://redis_ai
      - AI_URI=http://artifact_index:9696
      - AI_WORKER_KEY=TOOMANYWORKERS
      - AI_POOL_SIZE=1
      - AI_STATS_FREQUENCY=15
      - AI_HISTORICAL_SCAN_FREQUENCY=10
    command: bash -c "celery beat -A artifact_index.tasks.celery --broker=$${AI_REDIS_URI} --result-backend=$${AI_REDIS_URI} --loglevel=info"


