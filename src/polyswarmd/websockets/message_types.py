"""
This file has been automatically generated by scripts/gen_stubs.py
"""
from typing import Any, Dict, Generic, List, Mapping, Optional, TypeVar

try:
    from typing import TypedDict
except ImportError:
    from mypy_extensions import TypedDict

D = TypeVar('D')
E = TypeVar('E')


class EventData(Mapping):
    "Event data returned from web3 filter requests"
    args: Dict[str, Any]
    event: str
    logIndex: int
    transactionIndex: int
    transactionHash: bytes
    address: str
    blockHash: bytes
    blockNumber: int


class WebsocketEventMessage(Generic[D], Mapping):
    "An Polyswarm WebSocket message"
    event: str
    data: D
    block_number: Optional[int]
    txhash: Optional[str]


TransferMessageData = TypedDict('TransferMessageData', {'to': Any, 'from': Any, 'value': str})
NewDepositMessageData = TypedDict('NewDepositMessageData', {'value': int, 'from': Any})
NewWithdrawalMessageData = TypedDict('NewWithdrawalMessageData', {'to': Any, 'value': int})
FeesUpdatedMessageData = TypedDict(
    'FeesUpdatedMessageData', {
        'bounty_fee': int,
        'assertion_fee': int
    }
)
WindowsUpdatedMessageData = TypedDict(
    'WindowsUpdatedMessageData', {
        'assertion_reveal_window': int,
        'arbiter_vote_window': int
    }
)
NewBountyMessageData = TypedDict(
    'NewBountyMessageData', {
        'guid': str,
        'artifact_type': str,
        'author': Any,
        'amount': str,
        'uri': Any,
        'expiration': str,
        'metadata': str
    }
)
NewAssertionMessageData = TypedDict(
    'NewAssertionMessageData', {
        'bounty_guid': str,
        'author': Any,
        'index': int,
        'bid': List[str],
        'mask': List[bool],
        'commitment': str
    }
)
RevealedAssertionMessageData = TypedDict(
    'RevealedAssertionMessageData', {
        'bounty_guid': str,
        'author': Any,
        'index': int,
        'nonce': str,
        'verdicts': List[bool],
        'metadata': Any
    }
)
NewVoteMessageData = TypedDict(
    'NewVoteMessageData', {
        'bounty_guid': str,
        'voter': Any,
        'votes': List[bool]
    }
)
QuorumReachedMessageData = TypedDict('QuorumReachedMessageData', {'bounty_guid': str})
SettledBountyMessageData = TypedDict(
    'SettledBountyMessageData', {
        'bounty_guid': str,
        'settler': Any,
        'payout': int
    }
)
InitializedChannelMessageData = TypedDict(
    'InitializedChannelMessageData', {
        'ambassador': Any,
        'expert': Any,
        'guid': str,
        'multi_signature': Any
    }
)
ClosedAgreementMessageData = TypedDict(
    'ClosedAgreementMessageData', {
        'ambassador': Any,
        'expert': Any
    }
)
StartedSettleMessageData = TypedDict(
    'StartedSettleMessageData', {
        'initiator': Any,
        'nonce': int,
        'settle_period_end': int
    }
)
SettleStateChallengedMessageData = TypedDict(
    'SettleStateChallengedMessageData', {
        'challenger': Any,
        'nonce': int,
        'settle_period_end': int
    }
)
LatestEventMessageData = TypedDict('LatestEventMessageData', {'number': int})
