[isort]
atomic=True
balanced_wrapping=True
force_sort_within_sections=True
from_first=False
include_trailing_comma=True
known_first_party=polyswarmd,polyswarmartifact
known_standard_library=pytest,ujson,json
multi_line_output=3
use_parentheses=True

[flake8]
max-line-length= 101
include=src/polyswarmd/*
ignore = E402,  # module imports not at top of file
         E266,  # Too many leading '#' in comment
         E402,  # module imports not at top of file
         E302,  # blank line expectations
         E261,  # at least two spaces before inline comment
         E262,  # inline comment should start with a #
         E704,  # Multiple statements on one line
         E251,  # unexpected spaces around keyword / parameter equals
         W503,  # line break before binary operator
         E266,  # missing whitespace around arithmetic operators

[pycodestyle]
ignore = E402,  # module imports not at top of file
         E266,  # Too many leading '#' in comment
         E402,  # module imports not at top of file
         E302,  # blank line expectations
         E261,  # at least two spaces before inline comment
         E262,  # inline comment should start with a #
         E704,  # Multiple statements on one line
         E251,  # unexpected spaces around keyword / parameter equals
         W503,  # line break before binary operator
         E266,  # missing whitespace around arithmetic operators
max_line_length = 101
max_doc_length = 79

[yapf]
based_on_style = pep8
column_limit = 100
# align closing bracket with visual indentation
align_closing_bracket_with_visual_indent = true
# let spacing indicate operator precedence
arithmetic_precedence_indication = true
# Do not split consecutive brackets
coalesce_brackets = true
# if a subexpression with a comma fits in its starting line, then the subexpression is not split
split_all_top_level_comma_separated_values = true
# Set to True to prefer splitting before +, -, *, /, //, or @ rather than after.
split_before_arithmetic_operator = true
# prefer splitting before and or or rather than after.
split_before_logical_operator = true
# split each for-in clause onto it's own line
split_complex_comprehension = true