image: docker:stable

stages:
  - build
  - test
  - deploy
  - release

services:
  - docker:dind

before_script:
  - apk --no-cache add curl jq

kick-e2e:
    tags:
      - docker
    # FIXME in place while e2e chokes on tags
    except:
      - tags
    stage: deploy
    script:
      - set -e

      # kick e2e
      - >-
        E2E_PIPELINE_ID=`curl
        --silent
        --request POST
        --form "token=$CI_JOB_TOKEN"
        --form "variables[SOURCE_PROJECT]=$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME"
        --form "variables[SOURCE_BRANCH]=$CI_COMMIT_REF_NAME"
        --form ref=master
        "https://gitlab.polyswarm.io/api/v4/projects/${CI_CUSTOM_PROJECT_ID_E2E}/trigger/pipeline" | jq -r ".id"`

      # poll for it to finish
      - >-
        while [ -z $PIPELINE_STATUS ] || [ $PIPELINE_STATUS = "pending" ] || [ $PIPELINE_STATUS = "running" ]; do
          PIPELINE_STATUS=`curl \
            --silent \
            --header "PRIVATE-TOKEN: $CI_CUSTOM_CI_PAT" \
            "https://gitlab.polyswarm.io/api/v4/projects/${CI_CUSTOM_PROJECT_ID_E2E}/pipelines/$E2E_PIPELINE_ID" | jq -r ".status"`
          echo "waiting for e2e pipeline ...";
          sleep 5;
        done

      # check for success
      - >-
        if [ $PIPELINE_STATUS != "success" ]; then
          echo "failure further down the pipeline"
          exit 1
        fi

release:
    tags:
      - docker
    stage: release
    only:
      - tags
    script:
      - docker build --build-arg "POLYSWARMD_VERSION=$CI_COMMIT_TAG" --build-arg "CONTRACTS_VERSION=$CI_COMMIT_TAG" -t polyswarm/polyswarmd-release-builder -f docker/Dockerfile.release .
      - IMG_ID=$(docker create polyswarm/polyswarmd-release-builder)
      - docker cp "$IMG_ID:/tmp/polyswarmd-$CI_COMMIT_TAG.tar.gz" .
    artifacts:
      name: "$CI_COMMIT_TAG"
      paths:
        - "polyswarmd-$CI_COMMIT_TAG.tar.gz"
